---
name: "Build the documentation"
on:
  workflow_run:
    workflows:
      - Label PR
    types:
      - completed

jobs:
  pre_build:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.result }}
    steps:
      - name: Download the PR number from the triggering workflow as an artifact
        # XXX actions/download-artifact does not work here.
        # see the rationale at: https://github.com/dawidd6/action-download-artifact
        uses: dawidd6/action-download-artifact
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: labeler.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: pr_number

      - name: Export the number
        run: |
          ls -al
          cat pr_number.txt
          PR_NUMBER=`cat pr_number.txt`
          echo "PR_NUMBER=${PR_NUMBER}" >> ${GITHUB_ENV}

      - id: skip_check
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            console.log("context");
            console.log(JSON.stringify(context, null, 2));
            let should_skip = false;
            let pr_number = parseInt(process.env.PR_NUMBER);

            pull_request = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
            });
            console.log("pull_request");
            console.log(JSON.stringify(pull_request, null, 2));

            let labels = pull_request.labels.map(label => { return label.name });

            if (!labels.includes("area:docs")) {
              should_skip = true;
            }
            if (labels.includes("area:ci")) {
              should_skip = false;
            }
            return should_skip;
  docs:
    runs-on: ubuntu-latest
    needs: pre_build
    if: ${{ needs.pre_build.outputs.should_skip != 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install python3-sphinx python3-sphinx-rtd-theme python3-breathe doxygen

      - name: Build docs
        run: |
          make -C docs
